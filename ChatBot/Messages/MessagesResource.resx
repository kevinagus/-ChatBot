<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddOtherProducts" xml:space="preserve">
    <value>Scrivi l'elenco dei prodotti che vuoi aggiungere, per esempio: vino, birra, pasta</value>
  </data>
  <data name="AskIfContinueToAddProduct" xml:space="preserve">
    <value>Prodotti aggiunti con successo</value>
  </data>
  <data name="AskIfWantAddProduct" xml:space="preserve">
    <value>Vuoi aggiungere altri prodotti alla lista?</value>
  </data>
  <data name="AskIfWantSeePosition" xml:space="preserve">
    <value>Vuoi vedere la posizione dei prodotti nel supermercato?</value>
  </data>
  <data name="AskIfWantSuggestions" xml:space="preserve">
    <value>Uhm... forse manca qualcosa. Vuoi un consiglio?</value>
  </data>
  <data name="AskWhatListUse" xml:space="preserve">
    <value>Scegli dove salvare il prodotto selezionato:</value>
  </data>
  <data name="AskWhatToAdd" xml:space="preserve">
    <value>Scrivi l'elenco dei prodotti che vuoi aggiungere, per esempio: vino, birra, pasta</value>
  </data>
  <data name="CategoriesListCardTitle" xml:space="preserve">
    <value>Selezionare categoria dei prodotti in promo:</value>
  </data>
  <data name="CourtesyCategoryError" xml:space="preserve">
    <value>Ops! Categoria non disponibile... Riprova:</value>
  </data>
  <data name="CourtesyChooseError" xml:space="preserve">
    <value>Ops! La scelta è non valida... Riprova:</value>
  </data>
  <data name="CourtesyError" xml:space="preserve">
    <value>Ops! Qualcosa è andato storto...</value>
  </data>
  <data name="CourtesyProductError" xml:space="preserve">
    <value>Ops! Prodotto non valido... Riprova:</value>
  </data>
  <data name="CreatedList" xml:space="preserve">
    <value>Perfetto! Ho creato una nuova lista.</value>
  </data>
  <data name="EmptyShoppingList" xml:space="preserve">
    <value>La tua ultima lista della spesa era vuota, ne ho creata una nuova!</value>
  </data>
  <data name="ErrorLimitExceeded" xml:space="preserve">
    <value>Mi spiace ma non riesco a capire... Provo ad aiutarti:</value>
  </data>
  <data name="Greeting" xml:space="preserve">
    <value>Ciao {0}, cosa vuoi fare?</value>
  </data>
  <data name="GreetingVariant" xml:space="preserve">
    <value>Cosa posso fare per te?</value>
  </data>
  <data name="NoOpeningHours" xml:space="preserve">
    <value>Mi dispiace, ma al momento gli orari di apertura non sono disponibili</value>
  </data>
  <data name="NoPromoProduct" xml:space="preserve">
    <value>Mi dispiace ma non ci sono prodotti in promozione correlati alla tua spesa</value>
  </data>
  <data name="NoPromoProductForCategorySelected" xml:space="preserve">
    <value>Mi dispiace ma non sono presenti prodotti in promozione per questa categoria...</value>
  </data>
  <data name="NoSuggestionProduct" xml:space="preserve">
    <value>Mi dispiace ma al momento non vi sono prodotti suggeriti per te</value>
  </data>
  <data name="NotUnderstoodRequest" xml:space="preserve">
    <value>Scusa, non ho capito.</value>
  </data>
  <data name="ProductAdded" xml:space="preserve">
    <value>Prodotto aggiunto con successo.</value>
  </data>
  <data name="PromoProducts" xml:space="preserve">
    <value>Ti segnaliamo che ci sono anche questi prodotti in promozione che potrebbero interessarti:</value>
  </data>
  <data name="SelectAnotherCategory" xml:space="preserve">
    <value>Selezionare un altra categoria:</value>
  </data>
  <data name="SelectAnotherOption" xml:space="preserve">
    <value>Selezionare un altra opzione:</value>
  </data>
  <data name="SelectProduct" xml:space="preserve">
    <value>Che ne dici di..?</value>
  </data>
  <data name="SelectPromoProduct" xml:space="preserve">
    <value>Ti segnaliamo che ci sono anche questi prodotti in promozione che potrebbero interessarti:</value>
  </data>
  <data name="SelectPromoProductByCategory" xml:space="preserve">
    <value>Eccoti alcuni prodotti in promozione in questa categoria:</value>
  </data>
  <data name="ShowExtraOpeningHours" xml:space="preserve">
    <value>Prossime aperture straordinare:</value>
  </data>
  <data name="ShowOpeningHours" xml:space="preserve">
    <value>Gli orari del negozio sono i seguenti:</value>
  </data>
  <data name="ShowShoppingListReview" xml:space="preserve">
    <value>Riepilogo lista spesa:</value>
  </data>
  <data name="StartGreetings" xml:space="preserve">
    <value>Ciao</value>
  </data>
</root>